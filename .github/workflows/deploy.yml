name: Deploy MyeSIMPlus to Cloudflare Workers

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  # Security and quality checks
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level=moderate

      - name: Check for vulnerabilities
        run: npm audit --audit-level=high --production

  # Code quality and testing
  test:
    runs-on: ubuntu-latest
    needs: security-audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format -- --check

      - name: Type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Build validation
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate build
        run: npm run build

  # Deploy to staging (for PRs and develop branch)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://myesimplus-com-staging.advantec.workers.dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to staging
        run: npm run deploy:staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Run smoke tests
        run: |
          sleep 30
          curl -f https://myesimplus-com-staging.advantec.workers.dev/health || exit 1
          curl -f https://myesimplus-com-staging.advantec.workers.dev/api/health || exit 1

      - name: Comment PR with staging URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Staging deployment successful!\n\n**Preview URL:** https://myesimplus-com-staging.advantec.workers.dev\n\n**Health Check:** ‚úÖ Passed'
            })

  # Deploy to production (only on main branch)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://myesimplus-com.advantec.workers.dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to production
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Run production smoke tests
        run: |
          sleep 30
          curl -f https://myesimplus-com.advantec.workers.dev/health || exit 1
          curl -f https://myesimplus-com.advantec.workers.dev/api/health || exit 1
          curl -f https://myesimplus-com.advantec.workers.dev/api/plans || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Production deployment successful!"
          echo "üåê Live URL: https://myesimplus-com.advantec.workers.dev"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Production deployment failed!"
          exit 1

  # Performance and security testing (production only)
  post-deploy-tests:
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install testing tools
        run: |
          npm install -g lighthouse-cli
          npm install -g @lhci/cli

      - name: Run Lighthouse performance audit
        run: |
          lighthouse https://myesimplus-com.advantec.workers.dev --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless --no-sandbox"

      - name: Check Core Web Vitals
        run: |
          node -e "
            const report = require('./lighthouse-report.json');
            const lcp = report.audits['largest-contentful-paint'].numericValue;
            const fid = report.audits['max-potential-fid'].numericValue;
            const cls = report.audits['cumulative-layout-shift'].numericValue;
            
            console.log('Core Web Vitals:');
            console.log('LCP:', lcp, 'ms', lcp < 2500 ? '‚úÖ' : '‚ùå');
            console.log('FID:', fid, 'ms', fid < 100 ? '‚úÖ' : '‚ùå');
            console.log('CLS:', cls, cls < 0.1 ? '‚úÖ' : '‚ùå');
            
            if (lcp > 2500 || fid > 100 || cls > 0.1) {
              console.log('‚ùå Core Web Vitals check failed');
              process.exit(1);
            }
          "

      - name: Security headers check
        run: |
          curl -I https://myesimplus-com.advantec.workers.dev | grep -i "x-content-type-options\|x-frame-options\|strict-transport-security\|content-security-policy" || exit 1

      - name: API response time check
        run: |
          response_time=$(curl -o /dev/null -s -w '%{time_total}' https://myesimplus-com.advantec.workers.dev/api/plans)
          echo "API response time: ${response_time}s"
          if (( $(echo "$response_time > 1.0" | bc -l) )); then
            echo "‚ùå API response time too slow"
            exit 1
          fi

# Cleanup old deployments and artifacts
  cleanup:
    runs-on: ubuntu-latest
    needs: [deploy-production, deploy-staging]
    if: always()
    steps:
      - name: Cleanup old artifacts
        run: |
          echo "üßπ Cleaning up old artifacts and deployments"
          # Add cleanup logic here if needed